apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: nginx-template
objects:
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: nginx-server
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: nginx-server:latest
      source:
        dockerfile: |
          FROM nginx

          RUN  sed -i 's/listen       80;/listen       8080;/g' /etc/nginx/conf.d/default.conf

          #RUN echo 'disable_symlinks off;' >> /etc/nginx/conf.d/default.conf

          RUN cat /etc/nginx/conf.d/default.conf

        type: Dockerfile
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: nginx:latest
        type: Docker
      triggers:
        - type: ConfigChange

  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: nginx
    spec:
      tags:
        - from:
            kind: DockerImage
            name: "nginx:latest"
          name: "latest"

  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      labels:
        build: nginx-server
      name: nginx-server

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: nginx-server
    spec:
      strategy:
        type: Recreate
      replicas: 1
      selector:
        matchLabels:
          deployment: nginx-server
      template:
        metadata:
          labels:
            deployment: nginx-server
        spec:
          initContainers:
            - name: generate-test-file
              image: ${IMAGE_REGISTRY}/${NAMESPACE}/nginx-server:latest
              command: [
                  "bash",
                  "-c",
                  # "rm /usr/share/nginx/html/*; dd if=/dev/zero of=/usr/share/nginx/html/zero_90Gi bs=90M count=1024 status=progress",
                  "rm /usr/share/nginx/html/*; dd if=/dev/zero of=/usr/share/nginx/html/zero_1Gi bs=1M count=1024 status=progress",
                ]
              volumeMounts:
                - name: web-root
                  mountPath: /usr/share/nginx/html
          containers:
            - name: server
              image: ${IMAGE_REGISTRY}/${NAMESPACE}/nginx-server:latest
              imagePullPolicy: Always
              ports:
                - name: api
                  containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - name: web-root
                  mountPath: /usr/share/nginx/html
                - name: cache
                  mountPath: /var/cache/nginx
                - name: var-run
                  mountPath: /var/run
          volumes:
            - name: web-root
              emptyDir: {}
              # persistentVolumeClaim:
              #   claimName: nginx-server-web-root
            - name: cache
              emptyDir: {}
            - name: var-run
              emptyDir: {}

  - apiVersion: v1
    kind: Service
    metadata:
      name: nginx-server
    spec:
      ports:
        # the service can be accessed with the default port
        - port: 80
          # use the named port of the deployment
          targetPort: api
          protocol: TCP
          name: api
      selector:
        deployment: nginx-server

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: nginx-server
    spec:
      host: nginx-server-${NAMESPACE}.${OKD_DOMAIN}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: nginx-server
        weight: 100
      wildcardPolicy: None

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: nginx-server-web-root
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi

parameters:
  - name: NAMESPACE
    required: true
  - name: OKD_DOMAIN
    value: 2.rahtiapp.fi
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
